/**
@author Ryan Aday
112754800
REC 30
Section 1
**/

/**
* The <code>BooleanSource</code> class creates an BooleanSource object that generates
* a double random probability from 0.0 to whatever the max is set to using
* Math.random().
*
**/

import java.util.*;  //Used for implementing Vector class

public class BooleanSource{

  public static double probability;

  // Invariants:
  // probability always represents the random double generated by
  // .requestArrived().
  // probability should not ever change.

  /**
  * A constructor that accepts a double as a parameter as the value of
  * probability.
  * O(1) since all methods are O(1).
  * @param newProbability
  *    The new limit of the random probability generated.
  *
  **/

  public BooleanSource (double newProbability){
    probability = newProbability;
  }

  /**
  * Declares whether the randomized double is lower or higher than the limit.  O(1).
  *
  * <dt>Precondition:
  *   <dd>The probability is defined.
  *
  * @return
  *   Returns the boolean of whether the number generated was less than or
  *   equal to the limit set in the constructor.
  *
  **/

  public boolean requestArrived(){
      //Otherwise
      double randomProbability = Math.random();
      return randomProbability <= probability;
  }

}
